#!/usr/bin/perl

use strict;
use warnings;

use HTML::Entities;
use Carp ('croak');

my @bad_strings = ("foo\x0f<bar>\n", "foo\x00<bar>\n");
my @good_strings = ("foo <bar>\n", "foo\t<bar>\n");

sub contains_invalid_chars
{
  my $str = shift;

  for (split (m//, $str))
  {
    my $n = ord ($_);

    if (($n >= 9) && ($n <= 13))
    {
      next;
    }
    elsif ($n < 32)
    {
      return (1);
    }
  }

  return;
}

sub assert
{
  if (!$_[0])
  {
    croak ("assertion failed");
  }
}

for (@bad_strings)
{
  assert (contains_invalid_chars ($_));
}

for (@good_strings)
{
  assert (!contains_invalid_chars ($_));
}
